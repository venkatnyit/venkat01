# -*- coding: utf-8 -*-
"""stop_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kn9FMhoO-QC2BN9eU7WoL6EM17-yqTHu
"""

from mrjob.job import MRJob
import re

# Define the list of stopwords
stopwords = set(['the', 'and', 'of', 'a', 'to', 'in', 'is', 'it'])

class MRNonStopWordCounter(MRJob):

    def configure_args(self):
        super(MRNonStopWordCounter, self).configure_args()
        self.add_file_arg('--stopwords', help='Path to the stopwords file')

    def mapper_init(self):
        # Load stopwords from the provided file
        self.stopwords = set()
        with open(self.options.stopwords, 'r') as f:
            for line in f:
                self.stopwords.add(line.strip())

    def mapper(self, _, line):
        # Tokenize the line into words and count non-stop words
        words = re.findall(r'\b\w+\b', line.lower())
        for word in words:
            if word not in self.stopwords:
                yield (word, 1)

    def reducer(self, key, values):
        # Sum the counts for each non-stop word
        yield (key, sum(values))

if __name__ == '__main__':
    MRNonStopWordCounter.run()